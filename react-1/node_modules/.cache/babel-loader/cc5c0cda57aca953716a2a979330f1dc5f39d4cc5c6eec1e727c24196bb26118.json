{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitiy\\\\Desktop\\\\web dev\\\\react-1\\\\src\\\\DataList.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataList = props => {\n  const {\n    order,\n    a,\n    b\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: order\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"A:\", a]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"A:\", b]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 12\n  }, this);\n};\n_c = DataList;\nexport const dataArray = [{\n  a: Math.round(Math.random() * 10),\n  b: Math.round(Math.random() * 10)\n}, {\n  a: Math.round(Math.random() * 10),\n  b: Math.round(Math.random() * 10)\n}, {\n  a: Math.round(Math.random() * 10),\n  b: Math.round(Math.random() * 10)\n}, {\n  a: Math.round(Math.random() * 10),\n  b: Math.round(Math.random() * 10)\n}, {\n  a: Math.round(Math.random() * 10),\n  b: Math.round(Math.random() * 10)\n}];\nvar _c;\n$RefreshReg$(_c, \"DataList\");","map":{"version":3,"names":["DataList","props","order","a","b","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","dataArray","Math","round","random","$RefreshReg$"],"sources":["C:/Users/nitiy/Desktop/web dev/react-1/src/DataList.js"],"sourcesContent":[" export const DataList = (props) => {\r\nconst {order , a, b} = props\r\n    return <div>\r\n        <div>{order}</div>\r\n        <div>A:{a}</div>\r\n        <div>A:{b}</div>\r\n    </div>\r\n    \r\n}\r\n export const dataArray = [\r\n    {a: Math.round(Math.random()*10), b:Math.round(Math.random()*10)},\r\n    {a: Math.round(Math.random()*10), b:Math.round(Math.random()*10)},\r\n    {a: Math.round(Math.random()*10), b:Math.round(Math.random()*10)},\r\n    {a: Math.round(Math.random()*10), b:Math.round(Math.random()*10)},\r\n    {a: Math.round(Math.random()*10), b:Math.round(Math.random()*10)}\r\n]"],"mappings":";;AAAC,OAAO,MAAMA,QAAQ,GAAIC,KAAK,IAAK;EACpC,MAAM;IAACC,KAAK;IAAGC,CAAC;IAAEC;EAAC,CAAC,GAAGH,KAAK;EACxB,oBAAOI,OAAA;IAAAC,QAAA,gBACHD,OAAA;MAAAC,QAAA,EAAMJ;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClBL,OAAA;MAAAC,QAAA,GAAK,IAAE,EAACH,CAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAChBL,OAAA;MAAAC,QAAA,GAAK,IAAE,EAACF,CAAC;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV,CAAC;AAAAC,EAAA,GARaX,QAAQ;AASrB,OAAO,MAAMY,SAAS,GAAG,CACtB;EAACT,CAAC,EAAEU,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,EAAE,CAAC;EAAEX,CAAC,EAACS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,EAAE;AAAC,CAAC,EACjE;EAACZ,CAAC,EAAEU,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,EAAE,CAAC;EAAEX,CAAC,EAACS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,EAAE;AAAC,CAAC,EACjE;EAACZ,CAAC,EAAEU,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,EAAE,CAAC;EAAEX,CAAC,EAACS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,EAAE;AAAC,CAAC,EACjE;EAACZ,CAAC,EAAEU,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,EAAE,CAAC;EAAEX,CAAC,EAACS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,EAAE;AAAC,CAAC,EACjE;EAACZ,CAAC,EAAEU,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,EAAE,CAAC;EAAEX,CAAC,EAACS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,EAAE;AAAC,CAAC,CACpE;AAAA,IAAAJ,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}